/* 
This is a placeholder for Tesseract.js library.
In a real implementation, you would download the actual Tesseract.js file from:
https://unpkg.com/tesseract.js@v4.1.1/dist/tesseract.min.js

Or use the CDN version by updating the content script to load it dynamically:
https://cdn.jsdelivr.net/npm/tesseract.js@4/dist/tesseract.min.js

For now, we'll create a simple mock that demonstrates the interface:
*/

window.Tesseract = {
  recognize: async function(image, lang, options = {}) {
    // Mock OCR function for demonstration
    return new Promise((resolve) => {
      // Simulate OCR processing time
      const processingTime = 2000;
      const startTime = Date.now();
      
      const updateProgress = () => {
        const elapsed = Date.now() - startTime;
        const progress = Math.min(elapsed / processingTime, 1);
        
        if (options.logger) {
          options.logger({
            status: 'recognizing text',
            progress: progress
          });
        }
        
        if (progress < 1) {
          setTimeout(updateProgress, 100);
        } else {
          // Return mock OCR result
          resolve({
            data: {
              text: "Sample text extracted from image\n\nThis is a demonstration of the OCR functionality.\nIn a real implementation, this would be the actual text\nextracted from the captured image using Tesseract.js"
            }
          });
        }
      };
      
      updateProgress();
    });
  }
};

/*
IMPORTANT: To use real OCR functionality, replace this file with the actual Tesseract.js library.

Download from: https://unpkg.com/tesseract.js@v4.1.1/dist/tesseract.min.js
Or include in your build process using npm: npm install tesseract.js

The library is about 2MB in size and includes the OCR models needed for text recognition.
*/
